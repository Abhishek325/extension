configuration:
  foov1:
    type: String
    validate:
      isRegex: "lol"
  foov2:
    type: Int
    validate:
      max: 5
  foov3:
    type: Boolean
    validate:
      isRegex: "^(true|false)$"
  foov4:
    type: Url
    validate:
      isRegex: "([^\?]+)(\?.*)?"
  foov5:
    type: Email
    validate:
      isRegex: "(\S+@\S+\.\S+)?"
  foov6:
    type: IP
    validate:
      isRegex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
  foov7:
    type: IPv4
    validate:
      isRegex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
  foov8:
    type: IPv6
    validate:
      isRegex: "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))"
  foov9:
    type: Date
    validate:
      isAfter: "Wed Nov 02 2011 00:00:00 GMT+1000"
  foov10:
    type: Alpha
    validate:
      equals: 0.0
  foov11:
    type: Alphanumeric
    validate:
      max: 5
  foov12:
    type: Numeric
    validate:
      max: 5
  foov13:
    type: Float
    validate:
      isRegex: "(^-?\d*(\.\d+)?$)"
      max: 5.0
  foov14:
    type: UUID
    validate:
      isRegex: "^((?-i:0x)?[A-Fa-f0-9]{32}| [A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}| \{[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}\})$"
  foov15:
    type: String[]
    validate:
      isRegex: "lol"
  foov16:
    type: Int[]
    validate:
      isIntegrationType: "^\d+$"
  foov17:
    type: Boolean[]
    validate:
      isRegex: "^(true|false)$"
  foov18:
    type: Url[]
    validate:
      isRegex: "([^\?]+)(\?.*)?"
  foov19:
    type: Email[]
    validate:
      isRegex: "(\S+@\S+\.\S+)?"
  foov20:
    type: IP[]
    validate:
      isRegex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
  foov21:
    type: IPv4[]
    validate:
      isRegex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
  foov22:
    type: IPv6[]
    validate:
      isRegex: "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))"
  foov23:
    type: Date[]
    validate:
      isAfter: "Wed Nov 02 2011 00:00:00 GMT+1000"
  foov24:
    type: Alpha[]
  foov25:
    type: Alphanumeric[]
  foov26:
    type: Numeric[]
    validate:
      max: 5
  foov27:
    type: Float[]
  foov28:
    type: UUID[]
 foov1.1:
    type: String
    validate:
      contains: "lol"
 foov1.2:
    type: String
    validate:
      equals: "lol"
 foov1.3:
    type: String
    validate:
      isLowercase: true
 foov1.4:
    type: String
    validate:
      isUppercase: true
 foov1.5:
    type: String
    validate:
      len: 5
 foov1.5:
    type: String
    validate:
      notContains: "lol"
 foov1.5:
    type: String
    validate:
      notEmpty: true
 foov1.6:
    type: String
    validate:
      notIn: "notEmpty"
 foov1.7:
    type: String
    validate:
      notRegex: "lol"
  foov1.8:
    type: Date
    validate:
      isBefore: "Wed Nov 02 2011 00:00:00 GMT+1000"
  foov1.9:
    type: Int
    validate:
      max: 5
  foov2.0:
    type: Int
    validate:
      min: 5   
foov2.2:
    type: string[]
    validate:
      contains: "lol"
 foov2.2:
    type: string[]
    validate:
      equals: "lol"
 foov2.3:
    type: string[]
    validate:
      isLowercase: "lol"
 foov2.4:
    type: string[]
    validate:
      isUppercase: "LOL"
 foov2.5:
    type: string[]
    validate:
      len: 5
 foov2.5:
    type: string[]
    validate:
      notContains: "lol"
 foov2.5:
    type: string[]
    validate:
      notEmpty: "notEmpty"
 foov2.6:
    type: string[]
    validate:
      notIn: "notEmpty"
 foov2.7:
    type: string[]
    validate:
      notRegex: "lol"
userDefinedDataType:
  - type: foo
    configuration:
      foo1:
        type: String
      foo2:
        type: Int
      foo3:
        type: Boolean
      foo4:
        type: Url
      foo5:
        type: Email
      foo6:
        type: IP
      foo7:
        type: IPv4
      foo8:
        type: IPv6
      foo9:
        type: Date
      foo10:
        type: Alpha
      foo11:
        type: Alphanumeric
      foo12:
        type: Numeric
      foo13:
        type: Float
      foo14:
        type: UUID
      foo15:
        type: String[]
      foo16:
        type: Int[]
      foo17:
        type: Boolean[]
      foo18:
        type: Url[]
      foo19:
        type: Email[]
      foo20:
        type: IP[]
      foo21:
        type: IPv4[]
      foo22:
        type: IPv6[]
      foo23:
        type: Date[]
      foo24:
        type: Alpha[]
      foo25:
        type: Alphanumeric[]
      foo26:
        type: Numeric[]
      foo27:
        type: Float[]
      foo28:
        type: UUID[]
